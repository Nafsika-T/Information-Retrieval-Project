import spacy
from keyword_extraction import extract_keywords_in_years
from preprocess import preprocess_dataset
from file_handler import write_tfidf_files
from inverted_index import write_inverted_index
from queries import fetch_names_of_members, fetch_names_of_parties
from similarities import  find_top_simular_members
from lsa import extract_topics
from entities import extract_all_entities
from clustering import cluster

def setup():
    try:
        spacy.load('el_core_news_md')
    except OSError:
        spacy.cli.download('el_core_news_md')

    preprocess_dataset()

    write_tfidf_files()  # writes a dictionary with keys the terms and values their idf values
    # also writes tfidf_matrix generated by tfidf_vectorizer to file

    write_inverted_index()


def extract_keywords():
    member_names = fetch_names_of_members()

    for name in member_names:
        extract_keywords_in_years(name, True)

    party_names = fetch_names_of_parties()

    for name in party_names:
        extract_keywords_in_years(name, False)


def find_top_k_similar_members():
    find_top_simular_members()


def lsa():
    extract_topics()

def entity_recognition():
    all_names = fetch_names_of_members()
    for name in all_names:
       extract_all_entities(name)

def clustering():
    cluster()
